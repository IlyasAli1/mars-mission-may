{"version":3,"sources":["components/Footer.tsx","components/NavBar.tsx","components/Card.tsx","components/TimelineData.ts","components/Home.tsx","components/Gallery.tsx",".env.ts","api/NasaApi.ts","components/RoverData.ts","components/Rover.tsx","components/Timeline.tsx","components/WeatherBar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Footer","className","data-testid","href","src","alt","NavBar","location","useLocation","removedSlash","pathname","slice","pageName","substr","toUpperCase","toLowerCase","useState","closeBurger","setBurgerState","currentPage","setCurrentPage","clickLinkHandler","useEffect","to","onClick","Card","imageSrc","title","body","showInitialText","textHideable","imageOnRight","textVisible","setTextVisible","cardContent","push","TimelineHeaderData","TimelineData","launchDate","status","imageUrl","description","mission","Home","Gallery","rover","allPhotoData","photoId","imgList","map","imageData","id","imgSrc","NASA_BASE_URL","NASA_API_KEY","a","fetch","then","res","ok","Promise","reject","response","json","result","camelcaseKeys","photos","rovers","Rover","setAllPhotoData","undefined","selectedPhoto","setSelectedPhoto","useParams","photoIdString","regexMatch","parseInt","match","getRoverImages","images","foundPhoto","find","photoData","roverName","pageContent","findRover","camera","name","earthDate","data","Timeline","post","index","WeatherBar","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oZAGA,SAASA,IACL,OACI,qBAAKC,UAAU,SAASC,cAAY,SAApC,SACI,sBAAKD,UAAU,wBAAf,UACI,mBAAGE,KAAK,wBAAR,SACI,qBACID,cAAY,YACZE,IAAI,kFACJC,IAAI,WAEZ,mBAAGF,KAAK,gCAAR,SACI,qBACID,cAAY,kBACZE,IAAI,+CACJC,IAAI,sB,+BCZrB,SAASC,IACZ,IAAMC,EAAWC,cACXC,EAAeF,EAASG,SAASC,MAAM,GACvCC,EAA4B,KAAjBH,EACX,OACAA,EAAaI,OAAO,EAAG,GAAGC,cAAgBL,EAAaI,OAAO,GAAGE,cAEvE,EAAsCC,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAsCF,mBAASJ,GAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KAEA,SAASC,EAAiBF,GACtBD,GAAe,GACfE,EAAeD,GAOnB,OAJAG,qBAAU,WACNF,EAAeR,KAChB,CAACL,IAGA,sBAAKN,UAAU,SAAf,UACI,sBAAKA,UAAWgB,EAAc,UAAY,iBAAkBf,cAAY,UAAxE,UACI,cAAC,IAAD,CAAMqB,GAAG,IACLtB,UAA2B,SAAhBkB,EAAyB,oBAAsB,WAC1DK,QAAS,kBAAMH,EAAiB,SAChCnB,cAA6B,SAAhBiB,EAAyB,gBAAkB,oBAH5D,kBAMA,cAAC,IAAD,CAAMI,GAAG,UACLtB,UAA2B,WAAhBkB,EAA2B,oBAAsB,WAC5DjB,cAAY,SACZsB,QAAS,kBAAMH,EAAiB,WAHpC,oBAMA,cAAC,IAAD,CAAME,GAAG,eACLtB,UAA2B,gBAAhBkB,EAAgC,oBAAsB,WACjEjB,cAAY,cACZsB,QAAS,kBAAMH,EAAiB,gBAHpC,yBAMA,cAAC,IAAD,CACIE,GAAG,aAAatB,UAA2B,cAAhBkB,EAA8B,oBAAsB,WAC/EjB,cAAY,YACZsB,QAAS,kBAAMH,EAAiB,cAHpC,uBAMA,cAAC,IAAD,CAAME,GAAG,YACLtB,UAA2B,aAAhBkB,EAA6B,oBAAsB,WAC9DjB,cAAY,WACZsB,QAAS,kBAAMH,EAAiB,aAHpC,yBAOJ,qBAAKpB,UAAU,sBAAf,SAAsCkB,IACtC,sBAAKlB,UAAU,gBACXuB,QAAS,kBAAMN,GAAgBD,IAC/Bf,cAAY,cAFhB,UAGI,qBAAKD,UAAWgB,EAAc,eAAiB,eAC3Cf,cAAae,EAAc,eAAiB,iBAChD,qBAAKhB,UAAWgB,EAAc,eAAiB,iBAC/C,qBAAKhB,UAAWgB,EAAc,eAAiB,uB,YCnDxD,SAASQ,EAAT,GAAwG,IAAxFC,EAAuF,EAAvFA,SAAUvB,EAA6E,EAA7EA,KAAMwB,EAAuE,EAAvEA,MAAOC,EAAgE,EAAhEA,KAAMC,EAA0D,EAA1DA,gBAAiBC,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,aAE/E,EAAsCf,mBAASa,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAQA,IAAMC,EAAc,CAAC,qBAAoBjC,UAAU,aAAaG,IAAKsB,EAAUF,QAN/E,WACOM,GACCG,GAAgBD,KAION,IAU/B,OARIM,GACAE,EAAYC,KACR,sBAAKlC,UAAU,kBAAf,UACI,oBAAIA,UAAU,aAAd,SAA4B0B,IAC5B,mBAAG1B,UAAU,YAAb,SAA0B2B,QAIzB,KAATzB,EAEI,cAAC,IAAD,CAAqBF,UAAS,eAAU8B,EAAe,mBAAqB,IAAMR,GAAIpB,EAAtF,SACK+B,GADMR,GAOf,qBAAoBzB,UAAS,eAAU8B,EAAe,mBAAqB,IAA3E,SACKG,GADKR,GC3CX,IAAMU,EACF,qKADEA,EAEH,0VAEGC,EACb,CACI,CACIC,WAAY,kBACZX,MAAO,0BACPY,OAAQ,WACRC,SAAU,iNACVC,YAAa,gOACbC,QAAS,IAEb,CACIJ,WAAY,gBACZX,MAAO,gBACPY,OAAQ,SACRC,SAAU,8MACVC,YAAa,6MACbC,QAAS,IAEb,CACIJ,WAAY,oBACZX,MAAO,YACPY,OAAQ,SACRC,SAAU,wLACVC,YAAa,+OACbC,QAAS,yCAEb,CACIJ,WAAY,eACZX,MAAO,cACPY,OAAQ,mBACRC,SAAU,0GACVC,YAAa,ibACbC,QAAS,qCAGb,CACIJ,WAAY,gBACZX,MAAO,SACPY,OAAQ,mBACRC,SAAU,sGACVC,YAAa,yXACbC,QAAS,qCAEb,CACIJ,WAAY,gBACZX,MAAO,YACPY,OAAQ,mBACRC,SAAU,gIACVC,YAAa,wHChDd,SAASE,IACZ,OACI,sBAAK1C,UAAU,OAAf,UACI,qBAAKA,UAAU,eAAeG,IAAI,mHAClC,qBAAKH,UAAU,cAAf,SACI,cAAC,EAAD,CAAMyB,SAAUW,EAAa,GAAGG,SAAUb,MAAOU,EAAa,GAAGV,MAAOC,KAAMS,EAAa,GAAGK,QAAmBvC,KAAK,aAAa0B,iBAAiB,EAAMC,cAAc,EAAOC,cAAc,MAEjM,qBAAK9B,UAAU,cAAf,SACI,cAAC,EAAD,CAAMyB,SAAUW,EAAa,GAAGG,SAAUb,MAAOU,EAAa,GAAGV,MAAOC,KAAMS,EAAa,GAAGK,QAAmBvC,KAAK,eAAe0B,iBAAiB,EAAMC,cAAc,EAAOC,cAAc,MAEnM,qBAAK9B,UAAU,cAAf,SACI,cAAC,EAAD,CAAMyB,SAAUW,EAAa,GAAGG,SAAUb,MAAOU,EAAa,GAAGV,MAAOC,KAAMS,EAAa,GAAGK,QAAmBvC,KAAK,UAAU0B,iBAAiB,EAAMC,cAAc,EAAOC,cAAc,MAE9L,qBAAK9B,UAAU,sB,MCPpB,SAAS2C,EAAT,GAAkE,IAA/CC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,QACrCC,EAAUF,EAAaG,KAAI,SAAAC,GAAS,OACtC,cAAC,IAAD,CAAM3B,GAAE,WAAMsB,EAAN,YAAeK,EAAUC,IAAyBjD,cAAY,mBAAtE,SACI,qBAAwBD,UAAU,wBAAwBC,cAAY,wBAAtE,SACI,qBACIG,IAAK6C,EAAUE,OACfnD,UAAWiD,EAAUC,KAAOJ,EAAU,uBAAyB,cAC/D3C,IAAK8C,EAAUE,UAJbF,EAAUC,KADoBD,EAAUC,OAW1D,OACI,qBAAKlD,UAAU,oBAAoBC,cAAY,oBAA/C,SACK8C,I,6BCzBAK,EAAgB,wBAChBC,EAAe,2C,6DC0BrB,WAA8BT,GAA9B,eAAAU,EAAA,sEACkBC,MAAM,GAAD,OAAIH,EAAJ,qCAA8CR,EAA9C,oCAA+ES,IACpGG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,GAAKD,EAAME,QAAQC,OAAOH,MAC1CD,MAAK,SAAAK,GAAQ,OAAIA,EAASC,UAH5B,cACGC,EADH,yBAIIC,IAAcD,EAAOE,SAJzB,4C,sBC3BA,IAAMC,EAAS,CAClB,CACItB,MAAO,SACPP,WAAY,gBACZC,OAAQ,mBACRC,SAAU,sGACVC,YAAa,0XAEjB,CACII,MAAO,cACPP,WAAY,eACZC,OAAQ,mBACRC,SAAU,0GACVC,YAAa,kbAEjB,CACII,MAAO,YACPP,WAAY,oBACZC,OAAQ,SACRC,SAAU,wLACVC,YAAa,iPCNd,SAAS2B,IACZ,MAAwCpD,mBAAyB,IAAjE,mBAAO8B,EAAP,KAAqBuB,EAArB,KACA,EAA0CrD,wBAAmCsD,GAA7E,mBAAOC,EAAP,KAAsBC,EAAtB,KAEA,EAAiCC,cAAzB5B,EAAR,EAAQA,MAAO6B,EAAf,EAAeA,cACTC,EAAa,sCACb5B,EAAU6B,SAASF,GAiBzB,GAfApD,qBAAU,WACFuB,EAAMgC,MAAMF,IFIjB,SAAP,kCEHYG,CAAejC,EAAM9B,eAAe0C,MAAK,SAAAsB,GAAM,OAAIV,EAAgBU,QAExE,CAAClC,IAEJvB,qBAAU,WACN,IAAM0D,EAAalC,EAAamC,MAC5B,SAAAC,GAAS,OAAIA,EAAU/B,KAAOJ,KAE9BiC,GACAR,EAAiBQ,KAEtB,CAACN,EAAe5B,KAEdD,EAAMgC,MAAMF,GACb,OACI,cAAC,IAAD,CAAUpD,GAAG,MAIrB,IAAM4D,EAAYtC,EAAMhC,OAAO,EAAG,GAAGC,cAAgB+B,EAAMhC,OAAO,GAAGE,cAE/DqE,EAAc,CAChB,qBAA4BnF,UAAU,cAAtC,SACI,qBAAKC,cAAa2C,EAAM9B,cAAxB,SAAwCsE,EAAUxC,MAD7C,qBA0Bb,OArBI0B,GACAa,EAAYjD,KACR,qBAA4BlC,UAAU,cAAcC,cAAY,mBAAhE,SACI,cAAC,EAAD,CACIwB,SAAU6C,EAAcnB,OACxBzB,MAAK,kBAAa4C,EAAce,OAAOC,MACvC3D,KAAI,sBAAiB2C,EAAciB,WACnCrF,KAAK,GACL0B,iBAAiB,EACjBC,cAAc,EACdC,cAAc,KARb,qBAYjBqD,EAAYjD,KACR,cAAC,EAAD,CACIU,MAAOsC,EACPrC,aAAcA,EACdC,QAASA,KAIb,qBAAK9C,UAAU,OAAf,SACKmF,IAKb,SAASC,EAAUxC,GACf,IAAI4C,EAUJ,OAPIA,EADA5C,EAAMgC,MAAM,WACLV,EAAO,GACPtB,EAAMgC,MAAM,gBACZV,EAAO,GAEPA,EAAO,GAGX,cAAC,EAAD,CAAMzC,SAAU+D,EAAKjD,SAAUrC,KAAK,GAAGwB,MAAO8D,EAAK5C,MAAOjB,KAAM6D,EAAKhD,YAAaZ,iBAAiB,EAAMC,cAAc,EAAMC,cAAc,I,YCrF/I,SAAS2D,IACZ,IAAMzC,EAAMZ,EAAaY,KAAI,SAAC0C,EAAMC,GAAP,OACzB,qBAAiB3F,UAAW2F,EAAQ,IAAM,EAAI,gCAAkC,+BAAhF,SACI,cAAC,EAAD,CAAMlE,SAAUiE,EAAKnD,SACjBb,MAAK,UAAKgE,EAAKhE,MAAV,cAAqBgE,EAAKrD,YAC/BV,KAAI,UAAK+D,EAAKlD,YAAV,KACJtC,KAAK,GAAG0B,iBAAiB,EACzBC,cAAc,EACdC,aAAc6D,EAAQ,IAAM,KAN1BA,MAWd,OACI,sBAAK3F,UAAU,gBAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,sBAAsBI,IAAI,GAAGD,IAAI,qHAEpD,qBAAKH,UAAU,YAAf,SACI,cAAC,EAAD,CAAMyB,SAAUU,EAA0BT,MAAM,WAAWxB,KAAK,GAAGyB,KAAMQ,EAAyBP,iBAAiB,EAAMC,cAAc,EAAOC,cAAc,MAEhK,qBAAK9B,UAAU,iBAAf,SACKgD,IAEL,qBAAKhD,UAAU,sB,MC3BpB,SAAS4F,IACZ,OACI,qBAAK3F,cAAY,iBAAjB,SACI,oBAAID,UAAU,iBAAd,wCCgCG6F,MA3Bf,WACI,OACI,eAAC,IAAD,WACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,YAAlB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,UAAlB,SACI,cAAC5B,EAAD,MAEJ,cAAC,IAAD,CAAO2B,OAAK,EAACC,KAAK,yBAAlB,SACI,cAAC5B,EAAD,MAEJ,cAAC,IAAD,CAAO4B,KAAK,GAAZ,SACI,4DAGR,cAAC,EAAD,QClBGC,EAZS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,6BAAqB1C,MAAK,YAAkD,IAA/C2C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHpBO,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5BZ,M","file":"static/js/main.a135df04.chunk.js","sourcesContent":["import \"../styles/Footer.scss\";\r\nimport React from \"react\";\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"footer\" data-testid='footer'>\r\n            <div className=\"footer-logo-container\">\r\n                <a href=\"https://www.nasa.gov/\">\r\n                    <img\r\n                        data-testid='nasa-logo'\r\n                        src=\"https://www.nasa.gov/sites/default/files/thumbnails/image/nasa-logo-web-rgb.png\"\r\n                        alt=\"NASA\" />\r\n                </a>\r\n                <a href=\"https://www.techswitch.co.uk/\">\r\n                    <img\r\n                        data-testid='techswitch-logo'\r\n                        src=\"https://www.techswitch.co.uk/images/logo.svg\"\r\n                        alt=\"TechSwitch\" />\r\n                </a>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { Footer };","import { Link, useLocation } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport \"../styles/NavBar.scss\";\r\nimport React from \"react\";\r\n\r\nexport function NavBar() {\r\n    const location = useLocation();\r\n    const removedSlash = location.pathname.slice(1);\r\n    const pageName = removedSlash === \"\"\r\n        ? \"Home\"\r\n        : removedSlash.substr(0, 1).toUpperCase() + removedSlash.substr(1).toLowerCase();\r\n\r\n    const [closeBurger, setBurgerState] = useState(true);\r\n    const [currentPage, setCurrentPage] = useState(pageName);\r\n\r\n    function clickLinkHandler(currentPage: string) {\r\n        setBurgerState(true);\r\n        setCurrentPage(currentPage);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setCurrentPage(pageName);\r\n    }, [location]);\r\n\r\n    return (\r\n        <div className='header'>\r\n            <div className={closeBurger ? \"nav-bar\" : \"nav-bar-mobile\"} data-testid=\"nav-bar\">\r\n                <Link to='/'\r\n                    className={currentPage === \"Home\" ? \"nav-link-selected\" : \"nav-link\"}\r\n                    onClick={() => clickLinkHandler(\"Home\")}\r\n                    data-testid={currentPage === \"Home\" ? \"home-selected\" : \"home-not-selected\"}>\r\n                    Home\r\n                </Link>\r\n                <Link to='/spirit'\r\n                    className={currentPage === \"Spirit\" ? \"nav-link-selected\" : \"nav-link\"}\r\n                    data-testid=\"spirit\"\r\n                    onClick={() => clickLinkHandler(\"Spirit\")}>\r\n                    Spirit\r\n                </Link>\r\n                <Link to='/opportunity'\r\n                    className={currentPage === \"Opportunity\" ? \"nav-link-selected\" : \"nav-link\"}\r\n                    data-testid=\"opportunity\"\r\n                    onClick={() => clickLinkHandler(\"Opportunity\")}>\r\n                    Opportunity\r\n                </Link>\r\n                <Link\r\n                    to='/curiosity' className={currentPage === \"Curiosity\" ? \"nav-link-selected\" : \"nav-link\"}\r\n                    data-testid=\"curiosity\"\r\n                    onClick={() => clickLinkHandler(\"Curiosity\")}>\r\n                    Curiosity\r\n                </Link>\r\n                <Link to='/timeline'\r\n                    className={currentPage === \"Timeline\" ? \"nav-link-selected\" : \"nav-link\"}\r\n                    data-testid=\"timeline\"\r\n                    onClick={() => clickLinkHandler(\"Timeline\")}>\r\n                    Timeline\r\n                </Link>\r\n            </div>\r\n            <div className='current-page-mobile'>{currentPage}</div>\r\n            <div className=\"burger-button\"\r\n                onClick={() => setBurgerState(!closeBurger)}\r\n                data-testid='burger-test'>\r\n                <div className={closeBurger ? \"opened-bar-1\" : \"closed-bar-1\"}\r\n                    data-testid={closeBurger ? \"opened-bar-1\" : \"closed-bar-1\"}></div>\r\n                <div className={closeBurger ? \"opened-bar-2\" : \"closed-bar-2\"}></div>\r\n                <div className={closeBurger ? \"opened-bar-3\" : \"closed-bar-3\"}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import \"../styles/Card.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\n\r\ninterface CardProps {\r\n    imageSrc: string;\r\n    href: string;\r\n    title: string;\r\n    body: string;\r\n    showInitialText: boolean;\r\n    textHideable: boolean;\r\n    imageOnRight: boolean;\r\n}\r\n\r\nexport function Card({ imageSrc, href, title, body, showInitialText, textHideable, imageOnRight }: CardProps) {\r\n\r\n    const [textVisible, setTextVisible] = useState(showInitialText);\r\n\r\n    function toggleTextVisible(){\r\n        if(textHideable){\r\n            setTextVisible(!textVisible);\r\n        }\r\n    }\r\n\r\n    const cardContent = [<img key={imageSrc} className=\"card-image\" src={imageSrc} onClick={toggleTextVisible} />];\r\n\r\n    if (textVisible) {\r\n        cardContent.push(\r\n            <div className=\"card-text-block\">\r\n                <h1 className=\"card-title\">{title}</h1>\r\n                <p className=\"card-body\">{body}</p>\r\n            </div>);\r\n    }\r\n\r\n    if (href !== \"\") {\r\n        return (\r\n            <Link key={imageSrc} className={`card ${imageOnRight ? \"card-image-right\" : \"\"}`} to={href}>\r\n                {cardContent}\r\n            </Link>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div key={imageSrc} className={`card ${imageOnRight ? \"card-image-right\" : \"\"}`}>\r\n            {cardContent}\r\n        </div>\r\n    );\r\n}","export const TimelineHeaderData = {\r\n    image: \"https://gumlet.assettype.com/freepressjournal%2F2020-12%2F2b868206-0252-4386-9d77-b9b92f96a72f%2Fetc_2nd_lead_dec_1.jpg?w=1200&auto=format%2Ccompress&ogImage=true\",\r\n    text: \"Since our first close-up picture of Mars in 1965, spacecraft voyages to the Red Planet have revealed a world strangely familiar, yet different enough to challenge our perceptions of what makes a planet work. Every time we feel close to understanding Mars, new discoveries send us straight back to the drawing board to revise existing theories.\"};\r\n\r\nexport const TimelineData = \r\n[\r\n    {\r\n        launchDate: \"To be confirmed\",\r\n        title: \"NASA Mars Geyser Hopper\",\r\n        status: \"Proposed\",\r\n        imageUrl: \"https://www.researchgate.net/profile/Geoffrey-Landis/publication/258676254/figure/fig2/AS:909591009312768@1593874804366/Mars-Geyser-hopper-shown-as-deployed-on-Martian-surface-with-sampling-arm-extended.png\",\r\n        description: \"The Mars Geyser Hopper (MGH) is a NASA design reference mission for a Discovery-class spacecraft concept that would investigate the springtime carbon dioxide Martian geysers found in regions around the south pole of Mars.\",\r\n        mission: \"\"\r\n    },\r\n    {\r\n        launchDate: \"July 30, 2020\",\r\n        title: \"Perserverance\",\r\n        status: \"Active\",\r\n        imageUrl: \"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c0/Mars_2020_selfie_containing_both_perseverance_rover_and_ingenuity.gif/300px-Mars_2020_selfie_containing_both_perseverance_rover_and_ingenuity.gif\",\r\n        description: \"NASA rover based on the successful Curiosity design. Launched with the Mars 2020 mission on July 30, 2020, it landed on February 18, 2021. It carried the Mars Helicopter Ingenuity attached to its belly.\",\r\n        mission: \"\"\r\n    },\r\n    {\r\n        launchDate: \"November 26, 2011\",\r\n        title: \"Curiosity\",\r\n        status: \"Active\",\r\n        imageUrl: \"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f3/Curiosity_Self-Portrait_at_%27Big_Sky%27_Drilling_Site.jpg/260px-Curiosity_Self-Portrait_at_%27Big_Sky%27_Drilling_Site.jpg\",\r\n        description: \"Curiosity of the Mars Science Laboratory (MSL) mission by NASA, and landed at the Aeolis Palus plain near Aeolis Mons (informally \\\"Mount Sharp\\\") in Gale Crater on August 6, 2012. The Curiosity rover is still operational as of June 2021.\",\r\n        mission: \"November 2011 Mission to explore Mars\"\r\n    },\r\n    {\r\n        launchDate: \"July 7, 2003\",\r\n        title: \"Opportunity\",\r\n        status: \"No longer active\",\r\n        imageUrl: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d8/NASA_Mars_Rover.jpg/260px-NASA_Mars_Rover.jpg\",\r\n        description: \"Opportunity surpassed the previous records for longevity at 5,352 sols (5498 Earth days from landing to mission end; 15 Earth years or 8 Martian years) and covered 45.16 km (28.06 mi). The rover sent its last status on 10 June 2018 when a global 2018 Mars dust storm blocked the sunlight needed to recharge its batteries. After hundreds of attempts to reactivate the rover, NASA declared the mission complete on February 13, 2019.\",\r\n        mission: \"July 2003 Mission to explore Mars\"\r\n\r\n    },\r\n    {\r\n        launchDate: \"June 10, 2003\",\r\n        title: \"Spirit\",\r\n        status: \"No longer active\",\r\n        imageUrl: \"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f8/KSC-03PD-0786.jpg/480px-KSC-03PD-0786.jpg\",\r\n        description: \"Mars Exploration Rover (MER), launched on June 10, 2003, and landed on January 4, 2004. Nearly 6 years after the original mission limit, Spirit had covered a total distance of 7.73 km (4.80 mi) but its wheels became trapped in sand. The last communication received from the rover was on March 22, 2010, and NASA ceased attempts to re-establish communication on May 25, 2011.\",\r\n        mission: \"June 2003 Mission to explore Mars\"\r\n    },\r\n    {\r\n        launchDate: \" July 4, 1997\",\r\n        title: \"Sojourner\",\r\n        status: \"No longer active\",\r\n        imageUrl: \"https://upload.wikimedia.org/wikipedia/commons/thumb/3/3a/Sojourner_on_Mars_PIA01122.jpg/260px-Sojourner_on_Mars_PIA01122.jpg\",\r\n        description: \"Communications were lost on September 27, 1997. Sojourner had traveled a distance of just over 100 meters (330 ft).\"\r\n    }\r\n];","import \"../styles/Home.scss\";\r\nimport { Card } from \"./Card\";\r\nimport { TimelineData } from \"./TimelineData\";\r\n\r\nexport function Home() {\r\n    return (\r\n        <div className=\"home\">\r\n            <img className=\"banner-image\" src=\"https://blogs.nasa.gov/redplanetdispatch/wp-content/uploads/sites/279/2018/03/Mars-Website-banner-1024x309.jpg\" />\r\n            <div className=\"card-holder\">\r\n                <Card imageSrc={TimelineData[2].imageUrl} title={TimelineData[2].title} body={TimelineData[2].mission as string} href=\"/curiosity\" showInitialText={true} textHideable={false} imageOnRight={false} />\r\n            </div>\r\n            <div className=\"card-holder\">\r\n                <Card imageSrc={TimelineData[3].imageUrl} title={TimelineData[3].title} body={TimelineData[3].mission as string} href=\"/opportunity\" showInitialText={true} textHideable={false} imageOnRight={true} />\r\n            </div>\r\n            <div className=\"card-holder\">\r\n                <Card imageSrc={TimelineData[4].imageUrl} title={TimelineData[4].title} body={TimelineData[4].mission as string} href=\"/spirit\" showInitialText={true} textHideable={false} imageOnRight={false} />\r\n            </div>\r\n            <div className=\"footer-padding\"></div>\r\n        </div>\r\n    );\r\n}","import { PhotoDetails } from \"../api/NasaApi\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../styles/Gallery.scss\";\r\n\r\ninterface GalleryProps {\r\n    rover: string;\r\n    allPhotoData: PhotoDetails[];\r\n    photoId: number;\r\n}\r\n\r\nexport function Gallery({ rover, allPhotoData, photoId }: GalleryProps) {\r\n    const imgList = allPhotoData.map(imageData =>\r\n        <Link to={`/${rover}/${imageData.id}`} key={imageData.id} data-testid=\"small-photo-link\">\r\n            <div key={imageData.id} className=\"small-photo-container\" data-testid=\"small-photo-container\">\r\n                <img\r\n                    alt={imageData.imgSrc}\r\n                    className={imageData.id === photoId ? \"small-photo-selected\" : \"small-photo\"}\r\n                    src={imageData.imgSrc}\r\n                />\r\n            </div>\r\n        </Link>\r\n    );\r\n\r\n    return (\r\n        <div className=\"thumbnail-gallery\" data-testid=\"thumbnail-gallery\">\r\n            {imgList}\r\n        </div>\r\n    );\r\n}\r\n\r\n","export const NASA_BASE_URL = 'https://api.nasa.gov/';\r\nexport const NASA_API_KEY = 'IVHOgBl45Bc66c0ZyysyAkGemZaYSjtGWbRt3aTp';","import { NASA_BASE_URL, NASA_API_KEY } from \"../.env\";\r\nimport camelcaseKeys from \"camelcase-keys\";\r\n\r\nexport interface PhotoDetails {\r\n    id: number;\r\n    sol: number;\r\n    camera: Camera;\r\n    imgSrc: string;\r\n    earthDate: string;\r\n    rover: Rover;\r\n}\r\n\r\nexport interface Camera {\r\n    id: number;\r\n    name: string;\r\n    roverId: number;\r\n    fullName: string;\r\n}\r\n\r\nexport interface Rover {\r\n    id: number;\r\n    name: string;\r\n    landingDate: string;\r\n    launchDate: string;\r\n    status: string;\r\n}\r\n\r\nexport async function getRoverImages(rover: string): Promise<PhotoDetails[]> {\r\n    const result = await fetch(`${NASA_BASE_URL}mars-photos/api/v1/rovers/${rover}/photos?sol=1001&api_key=${NASA_API_KEY}`)\r\n        .then(res => res.ok ? res : Promise.reject(res))\r\n        .then(response => response.json());\r\n    return camelcaseKeys(result.photos);\r\n}","export const rovers = [\r\n    {\r\n        rover: \"Spirit\",\r\n        launchDate: \"June 10, 2003\",\r\n        status: \"No longer active\",\r\n        imageUrl: \"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f8/KSC-03PD-0786.jpg/480px-KSC-03PD-0786.jpg\",\r\n        description: \"Mars Exploration Rover (MER), launched on June 10, 2003, and landed on January 4, 2004. Nearly 6 years after the original mission limit, Spirit had covered a total distance of 7.73 km (4.80 mi) but its wheels became trapped in sand. The last communication received from the rover was on March 22, 2010, and NASA ceased attempts to re-establish communication on May 25, 2011.\"\r\n    },\r\n    {\r\n        rover: \"Opportunity\",\r\n        launchDate: \"July 7, 2003\",\r\n        status: \"No longer active\",\r\n        imageUrl: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d8/NASA_Mars_Rover.jpg/260px-NASA_Mars_Rover.jpg\",\r\n        description: \"Opportunity surpassed the previous records for longevity at 5,352 sols (5498 Earth days from landing to mission end; 15 Earth years or 8 Martian years) and covered 45.16 km (28.06 mi). The rover sent its last status on 10 June 2018 when a global 2018 Mars dust storm blocked the sunlight needed to recharge its batteries. After hundreds of attempts to reactivate the rover, NASA declared the mission complete on February 13, 2019.\"\r\n    },\r\n    {\r\n        rover: \"Curiosity\",\r\n        launchDate: \"November 26, 2011\",\r\n        status: \"active\",\r\n        imageUrl: \"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f3/Curiosity_Self-Portrait_at_%27Big_Sky%27_Drilling_Site.jpg/260px-Curiosity_Self-Portrait_at_%27Big_Sky%27_Drilling_Site.jpg\",\r\n        description: \"Curiosity of the Mars Science Laboratory (MSL) mission by NASA, and landed at the Aeolis Palus plain near Aeolis Mons (informally \\\"Mount Sharp\\\") in Gale Crater on August 6, 2012. The Curiosity rover is still operational as of June 2021.\"\r\n    },   \r\n];","import { useState, useEffect } from \"react\";\r\nimport { useParams, Redirect } from \"react-router-dom\";\r\nimport { Gallery } from \"./Gallery\";\r\nimport { Card } from \"./Card\";\r\nimport { PhotoDetails, getRoverImages } from \"../api/NasaApi\";\r\nimport { rovers } from \"./RoverData\";\r\nimport \"../styles/Home.scss\";\r\nimport React from \"react\";\r\n\r\ninterface RoverParams {\r\n    rover: string;\r\n    photoIdString: string;\r\n}\r\n\r\nexport function Rover() {\r\n    const [allPhotoData, setAllPhotoData] = useState<PhotoDetails[]>([]);\r\n    const [selectedPhoto, setSelectedPhoto] = useState<PhotoDetails | undefined>(undefined);\r\n\r\n    const { rover, photoIdString } = useParams<RoverParams>();\r\n    const regexMatch = /(opportunity)|(spirit)|(curiosity)/i;\r\n    const photoId = parseInt(photoIdString);\r\n\r\n    useEffect(() => {\r\n        if (rover.match(regexMatch)) {\r\n            getRoverImages(rover.toLowerCase()).then(images => setAllPhotoData(images));\r\n        }\r\n    }, [rover]);\r\n\r\n    useEffect(() => {\r\n        const foundPhoto = allPhotoData.find(\r\n            photoData => photoData.id === photoId\r\n        );\r\n        if (foundPhoto) {\r\n            setSelectedPhoto(foundPhoto);\r\n        }\r\n    }, [photoIdString, allPhotoData]);\r\n\r\n    if (!rover.match(regexMatch)) {\r\n        return (\r\n            <Redirect to=\"/\" />\r\n        );\r\n    }\r\n\r\n    const roverName = rover.substr(0, 1).toUpperCase() + rover.substr(1).toLowerCase();\r\n\r\n    const pageContent = [\r\n        <div key=\"description-card\" className=\"card-holder\">\r\n            <div data-testid={rover.toLowerCase()}>{findRover(rover)}</div>\r\n        </div>\r\n    ];\r\n\r\n    if (selectedPhoto) {\r\n        pageContent.push(\r\n            <div key=\"large-photo-card\" className=\"card-holder\" data-testid=\"large-photo-card\">\r\n                <Card\r\n                    imageSrc={selectedPhoto.imgSrc}\r\n                    title={`Camera: ${selectedPhoto.camera.name}`}\r\n                    body={`Date taken: ${selectedPhoto.earthDate}`}\r\n                    href=\"\"\r\n                    showInitialText={true}\r\n                    textHideable={false}\r\n                    imageOnRight={false} />\r\n            </div>);\r\n    }\r\n\r\n    pageContent.push(\r\n        <Gallery\r\n            rover={roverName}\r\n            allPhotoData={allPhotoData}\r\n            photoId={photoId} />\r\n    );\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            {pageContent}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction findRover(rover: string) {\r\n    let data;\r\n\r\n    if (rover.match(/spirit/i)) {\r\n        data = rovers[0];\r\n    } else if (rover.match(/opportunity/i)) {\r\n        data = rovers[1];\r\n    } else {\r\n        data = rovers[2];\r\n    }\r\n\r\n    return <Card imageSrc={data.imageUrl} href=\"\" title={data.rover} body={data.description} showInitialText={true} textHideable={true} imageOnRight={true} />;\r\n}","import { TimelineData, TimelineHeaderData } from \"./TimelineData\";\r\nimport \"../styles/constants.scss\";\r\nimport \"../styles/Timeline.scss\";\r\nimport { Card } from \"./Card\";\r\n\r\nexport function Timeline() {\r\n    const map = TimelineData.map((post, index) => \r\n        <div key={index} className={index % 2 === 0 ? \"information-card-holder-right\" : \"information-card-holder-left\"}>\r\n            <Card imageSrc={post.imageUrl}\r\n                title={`${post.title} - ${post.launchDate}`}\r\n                body={`${post.description} `}\r\n                href=\"\" showInitialText={true}\r\n                textHideable={false}\r\n                imageOnRight={index % 2 === 0 ? true : false}\r\n            />\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"timeline-page\">\r\n            <div className=\"timeline-banner\">\r\n                <img className=\"timeline-banner-img\" alt=\"\" src=\"https://blogs.nasa.gov/redplanetdispatch/wp-content/uploads/sites/279/2018/03/Mars-Website-banner-1024x309.jpg\" />\r\n            </div>\r\n            <div className=\"main-card\">\r\n                <Card imageSrc={TimelineHeaderData.image} title=\"Timeline\" href=\"\" body={TimelineHeaderData.text} showInitialText={true} textHideable={false} imageOnRight={false} />\r\n            </div>\r\n            <div className=\"timeline-cards\">\r\n                {map}\r\n            </div>\r\n            <div className='footer-padding'></div>\r\n        </div>\r\n    );\r\n}\r\n","import \"../styles/WeatherBar.scss\";\r\n\r\nexport function WeatherBar() {\r\n    return (\r\n        <div data-testid='weather-banner'>\r\n            <h2 className='weather-banner'> -80°C Sunny on Mars </h2>\r\n        </div>\r\n    );\r\n}","import \"./App.scss\";\r\nimport { Footer } from \"./components/Footer\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { NavBar } from \"./components/NavBar\";\r\nimport { Home } from \"./components/Home\";\r\nimport { Rover } from \"./components/Rover\";\r\nimport { Timeline } from \"./components/Timeline\";\r\nimport { WeatherBar } from \"./components/WeatherBar\";\r\nimport React from \"react\";\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <NavBar />\r\n            <WeatherBar/>\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <Home />\r\n                </Route>\r\n                <Route exact path=\"/timeline\">\r\n                    <Timeline />\r\n                </Route>\r\n                <Route exact path=\"/:rover\"> \r\n                    <Rover />\r\n                </Route>\r\n                <Route exact path=\"/:rover/:photoIdString\">\r\n                    <Rover />\r\n                </Route>\r\n                <Route path=\"\">\r\n                    <div>Sorry path not found</div>\r\n                </Route>\r\n            </Switch>\r\n            <Footer />\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;","import { ReportHandler } from \"web-vitals\";\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}